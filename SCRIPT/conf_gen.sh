#!/bin/sh
# Script for generating configuration file
# Author Hoque, ahoque1@memphis.edu

# creating all the configuration file
touch zebra.conf;
touch ospfd.conf;
touch ospfn.conf;
touch ccnd.conf;
touch ccndrc;
touch ccn_dhcp_server.conf;

timestamp=`date "+%Y-%m-%d %H:%M:%S"`;
echo "Enter hostname: ";
read hostname;
echo "Enter password for host( zebra and ospfd): ";
read password;
echo "Enter enable password for host( zebra and ospfd): ";
read enablepwd;

echo "";
echo "This information is needed for generating zebra.conf and ospfd.conf and part of ccnd.conf";
echo "";

# Generating zebra.conf
echo "! -*- zebra -*-">zebra.conf;
echo "! ">>zebra.conf;
echo "! zebra configuration file">>zebra.conf;
echo "! Generated by Script with minimal requirements">>zebra.conf;
echo "! Generated at $timestamp">>zebra.conf;
echo "!">>zebra.conf;
echo "!">>zebra.conf;
echo "hostname $hostname">>zebra.conf;
echo "password $password">>zebra.conf;
echo "enable password $enablepwd">>zebra.conf;
echo "!">>zebra.conf;
echo "!">>zebra.conf;
echo "! end of configuration file">>zebra.conf; 

# Generating ospfd.conf
echo "! -*- ospfd -*-">ospfd.conf;
echo "! ">>ospfd.conf;
echo "! ospfd configuration file">>ospfd.conf;
echo "! Generated by Script with minimal requirements">>ospfd.conf;
echo "! Generated at $timestamp">>ospfd.conf;
echo "!">>ospfd.conf;
echo "!">>ospfd.conf;
echo "hostname $hostname">>ospfd.conf;
echo "password $password">>ospfd.conf;
echo "enable password $enablepwd">>ospfd.conf;
echo "!">>ospfd.conf;
echo "!">>ospfd.conf;
echo "Enter router id :";
read router_id;
tag="y";
ifaddrs="";
ifno=0;
while [ "$tag" = "y" ]
    do
	echo "Enter tunnel interface name :";
	read ifname;
	echo "interface $ifname">>ospfd.conf;
	echo "!">>ospfd.conf;
	echo "!">>ospfd.conf;
	echo "Enter tunnel interface's ip: ";
	read ifaddr;
	ifaddrs=$ifaddrs"|"$ifaddr;
	ifno=`expr $ifno + 1`;
	echo "More interface (y/n): ";
	read tag;
    done
echo "access-list ospfn permit 10.0.0.0/8">>ospfd.conf;
echo "access-list ospfn deny any">>ospfd.conf;
echo "!">>ospfd.conf;
echo "!">>ospfd.conf;
echo "router ospf">>ospfd.conf;
echo " ospf router-id $router_id">>ospfd.conf;
echo " redistribute connected">>ospfd.conf;
echo " distribute-list ospfn out connected">>ospfd.conf;

echo "";
echo " Information needed for genrating ccnd.conf, ccn_dhcp_server.conf, ccndrc";
echo "";
echo "Enter site prefixes (/ndn/memphis.edu/netlab): ";
read siteprefix;

echo "add ccnx:$siteprefix udp 224.0.23.170 59695">ccnd.conf;
echo "CCND_AUTOREG=/ndn/broadcast,$siteprefix">ccndrc;
echo "ccnname $siteprefix 1">ospfn.conf;
echo "#prefix gateway(ip address/machine name) port. e.g.,">ccn_dhcp_server.conf;
echo "#">>ccn_dhcp_server.conf;
echo "#the following are the only entries sent to the dhcp clients">>ccn_dhcp_server.conf;
echo "#to add to their prefix entry tables">>ccn_dhcp_server.conf;
echo "ccnx:/ 224.0.23.170 59695">>ccn_dhcp_server.conf;
echo "ccnx:$siteprefix 224.0.23.170 59695">>ccn_dhcp_server.conf;

ifn=0;
while [ $ifno -gt 0 ]
    do
	ifn=` expr $ifno + 1`;
	ifaddr=`echo $ifaddrs | cut -d"|" -f$ifn`;	
	#echo $ifaddr;
	ip1=`echo $ifaddr | cut -d"." -f1`;
	ip2=`echo $ifaddr | cut -d"." -f2`;
	ip3=`echo $ifaddr | cut -d"." -f3`;
	ip4=`echo $ifaddr | cut -d"." -f4`;
	net=$(((($ip4/4))*4));
	mod=`expr $ip4 - $net`;
	if [ $mod = "1" ]; then
		oip=2;
	fi
	if [ $mod = "2" ]; then
		oip=1;
	fi
	oeip4=`expr $net + $oip`;
	echo "add /ndn/broadcast udp $ip1.$ip2.$ip3.$oeip4">>ccnd.conf;  
	echo " network $ip1.$ip2.$ip3.$net/30 area 0.0.0.0">>ospfd.conf;
	ifno=`expr $ifno - 1`;
    done
echo " capability opaque">>ospfd.conf;
echo "!">>ospfd.conf;
echo "!">>ospfd.conf;
echo "line vty">>ospfd.conf;
echo "!">>ospfd.conf;
echo "!">>ospfd.conf;
echo "!------End of confoguration file--------">>ospfd.conf;

opid=1;
tag="y";
echo "";
echo "Information for generation of ospfn.conf";
echo "";
echo "Advertize more name prefix in addition to site prefix (y/n):";
read tag;
while [ "$tag" = "y" ]
    do
	echo "name prefix :";
	read nameprefix;
	opid=`expr $opid + 1`;
	echo "ccnname $nameprefix $opid">>ospfn.conf;	
	echo "More name prefix (y/n): ";
	read tag;
    done

echo "";
echo "Default ospfn log directory ?(y/n)";
read tag;
if [ $tag = "n" ]; then
	echo " Ospfn Log directory: ";
	read logdir;
	echo "logdir $logdir">>ospfn.conf;
fi
echo " Generation of zebra.conf, ospfd.conf, ccnd.conf, ccndrc, ccn_dhcp_server.conf and ospfn.conf complete";
echo " Please copy them and put in the appropriate directory";
